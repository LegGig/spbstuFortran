Global optimization report for : MAIN__

LOOP BEGIN at src/main.f90 (17, 7)
<Multiversioned v1>
    remark #25399: memcopy generated
    remark #25562: The loop has been multiversioned for the small trip count
LOOP END

LOOP BEGIN at src/main.f90 (17, 21)
<Multiversioned v1>
    remark #25399: memcopy generated
    remark #25562: The loop has been multiversioned for the small trip count
LOOP END

LOOP BEGIN at src/main.f90 (21, 7)
<Multiversioned v1>
    remark #25399: memcopy generated
    remark #25562: The loop has been multiversioned for the small trip count
LOOP END

LOOP BEGIN at src/main.f90 (17, 7)
    remark #15521: Loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at src/main.f90 (17, 7)

    LOOP BEGIN at src/main.f90 (17, 7)
    <Multiversioned v2>
        remark #15300: LOOP WAS VECTORIZED
        remark #15305: vectorization support: vector length 2
        remark #15475: --- begin vector loop cost summary ---
        remark #15476: scalar cost: 5.000000 
        remark #15477: vector cost: 4.046875 
        remark #15478: estimated potential speedup: 1.171875 
        remark #15309: vectorization support: normalized vectorization overhead 0.484375
        remark #15488: --- end vector loop cost summary ---
        remark #15447: --- begin vector loop memory reference summary ---
        remark #15450: unmasked unaligned unit stride loads: 1 
        remark #15451: unmasked unaligned unit stride stores: 1 
        remark #15474: --- end vector loop memory reference summary ---
    LOOP END

    LOOP BEGIN at src/main.f90 (17, 7)
    <Remainder loop for vectorization>
    LOOP END

    LOOP BEGIN at src/main.f90 (17, 21)
    <Multiversioned v2>
        remark #15300: LOOP WAS VECTORIZED
        remark #15305: vectorization support: vector length 2
        remark #15475: --- begin vector loop cost summary ---
        remark #15476: scalar cost: 5.000000 
        remark #15477: vector cost: 4.046875 
        remark #15478: estimated potential speedup: 1.171875 
        remark #15309: vectorization support: normalized vectorization overhead 0.484375
        remark #15488: --- end vector loop cost summary ---
        remark #15447: --- begin vector loop memory reference summary ---
        remark #15450: unmasked unaligned unit stride loads: 1 
        remark #15451: unmasked unaligned unit stride stores: 1 
        remark #15474: --- end vector loop memory reference summary ---
    LOOP END

    LOOP BEGIN at src/main.f90 (17, 21)
    <Remainder loop for vectorization>
    LOOP END
LOOP END

LOOP BEGIN at src/main.f90 (20, 4)

    LOOP BEGIN at src/main.f90 (21, 7)
    <Multiversioned v2>
        remark #15300: LOOP WAS VECTORIZED
        remark #15305: vectorization support: vector length 2
        remark #15475: --- begin vector loop cost summary ---
        remark #15476: scalar cost: 5.000000 
        remark #15477: vector cost: 4.046875 
        remark #15478: estimated potential speedup: 1.171875 
        remark #15309: vectorization support: normalized vectorization overhead 0.484375
        remark #15488: --- end vector loop cost summary ---
        remark #15447: --- begin vector loop memory reference summary ---
        remark #15450: unmasked unaligned unit stride loads: 1 
        remark #15451: unmasked unaligned unit stride stores: 1 
        remark #15474: --- end vector loop memory reference summary ---
    LOOP END

    LOOP BEGIN at src/main.f90 (21, 7)
    <Remainder loop for vectorization>
    LOOP END
LOOP END

LOOP BEGIN at src/main.f90 (27, 15)
    remark #15553: loop was not vectorized: outer loop is not an auto-vectorization candidate.

    LOOP BEGIN at src/main.f90 (27, 15)
        remark #15300: LOOP WAS VECTORIZED
        remark #15305: vectorization support: vector length 2
        remark #15475: --- begin vector loop cost summary ---
        remark #15476: scalar cost: 6.000000 
        remark #15477: vector cost: 4.515625 
        remark #15478: estimated potential speedup: 1.312500 
        remark #15309: vectorization support: normalized vectorization overhead 1.093750
        remark #15488: --- end vector loop cost summary ---
        remark #15447: --- begin vector loop memory reference summary ---
        remark #15450: unmasked unaligned unit stride loads: 1 
        remark #15474: --- end vector loop memory reference summary ---
        remark #25587: Loop has reduction
        remark #15590: vectorization support: add reduction with value type float [src/main.f90:27:15]
    LOOP END

    LOOP BEGIN at src/main.f90 (27, 15)
    <Remainder loop for vectorization>
    LOOP END
LOOP END
=================================================================

---- Begin Inlining Report ----
Option Values:
  inline-threshold: 225
  inlinehint-threshold: 325
  inlinecold-threshold: 45
  inlineoptsize-threshold: 15

DEAD STATIC FUNC: llvm.memset.p0.i64

DEAD STATIC FUNC: llvm.ssa.copy.f32

DEAD STATIC FUNC: llvm.ssa.copy.i64

COMPILE FUNC: MAIN__
   -> EXTERN: for_set_fpe_ ld-temp.o (1,9)
   -> EXTERN: for_set_reentrancy ld-temp.o (1,9)
   -> DELETE: llvm.memset.p0.i64 ld-temp.o (8,31)
   -> EXTERN: for_open ld-temp.o (13,4)
   -> EXTERN: for_read_seq_lis ld-temp.o (14,7)
   -> llvm.smax.i32 ld-temp.o (16,7)
   -> llvm.smax.i32 ld-temp.o (16,7)
   -> EXTERN: for_check_mult_overflow64 ld-temp.o (16,7)
   -> EXTERN: for_alloc_allocatable_handle ld-temp.o (16,7)
   -> EXTERN: for_read_seq_lis ld-temp.o (17,7)
   -> llvm.stacksave ld-temp.o (17,21)
   -> llvm.smax.i64 ld-temp.o (17,7)
   -> EXTERN: for_read_seq_lis_xmit ld-temp.o (17,7)
   -> llvm.stackrestore ld-temp.o (17,21)
   -> EXTERN: for_read_seq_lis_xmit ld-temp.o (17,7)
   -> llvm.stacksave ld-temp.o (17,21)
   -> llvm.smax.i32 ld-temp.o (17,7)
   -> EXTERN: for_read_seq_lis_xmit ld-temp.o (17,7)
   -> llvm.stackrestore ld-temp.o (17,21)
   -> EXTERN: for_read_seq_lis_xmit ld-temp.o (17,7)
   -> EXTERN: for_close ld-temp.o (18,11)
   -> llvm.stacksave ld-temp.o (21,7)
   -> llvm.smax.i64 ld-temp.o (21,7)
   -> llvm.log10.f64 ld-temp.o (21,19)
   -> llvm.floor.f64 ld-temp.o (21,19)
   -> EXTERN: environment_mp_string_plus_int_ ld-temp.o (21,16)
   -> EXTERN: for_concat ld-temp.o (21,19)
   -> EXTERN: for_write_seq_fmt ld-temp.o (21,7)
   -> llvm.stackrestore ld-temp.o (21,7)
   -> EXTERN: for_close ld-temp.o (25,11)
   -> llvm.sqrt.f32 ld-temp.o (27,15)
   -> EXTERN: for_open ld-temp.o (29,4)
   -> EXTERN: for_write_seq_fmt ld-temp.o (30,7)
   -> EXTERN: for_close ld-temp.o (31,11)
   -> DELETE: llvm.memcpy.p0.p0.i64 ld-temp.o (17,7)
   -> llvm.memcpy.p0.p0.i64 ld-temp.o (17,7)
   -> DELETE: llvm.memcpy.p0.p0.i64 ld-temp.o (17,7)
   -> llvm.memcpy.p0.p0.i64 ld-temp.o (17,7)
   -> DELETE: llvm.memcpy.p0.p0.i64 ld-temp.o (21,7)
   -> llvm.memcpy.p0.p0.i64 ld-temp.o (21,7)
   -> DELETE: llvm.vector.reduce.fadd.v2f32 ld-temp.o (27,15)
   -> llvm.vector.reduce.fadd.v2f32 ld-temp.o (27,15)
   -> DELETE: llvm.ssa.copy.i64 ld-temp.o (17,7)
   -> DELETE: llvm.ssa.copy.i64 ld-temp.o (17,21)
   -> DELETE: llvm.ssa.copy.i64 ld-temp.o (21,7)
   -> DELETE: llvm.ssa.copy.i64 ld-temp.o (21,7)
   -> DELETE: llvm.ssa.copy.i64 ld-temp.o (27,15)
   -> DELETE: llvm.ssa.copy.i64 ld-temp.o (27,15)
   -> DELETE: llvm.ssa.copy.f32 ld-temp.o
   -> DELETE: llvm.ssa.copy.i64 ld-temp.o (27,15)
   -> DELETE: llvm.ssa.copy.i64 ld-temp.o (27,15)
   -> DELETE: llvm.ssa.copy.i64 ld-temp.o (27,4)
   -> DELETE: llvm.ssa.copy.i64 ld-temp.o

---- End Inlining Report ------
